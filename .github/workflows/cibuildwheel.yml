---
name: Build CI wheels

on:
  # Save CI by only running this on release branches or tags.
  push:
    branches:
      - main
      - v[0-9]+.[0-9]+.x
    tags:
      - v*
  # Also allow running this action on PRs if requested by applying the
  # "Run cibuildwheel" label.
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled

permissions:
  contents: read

jobs:
  build_sdist:
    if: >-
      github.repository == 'matplotlib/matplotlib' && (
        github.event_name == 'push' ||
        github.event_name == 'pull_request' && (
          (
            github.event.action == 'labeled' &&
            github.event.label.name == 'CI: Run cibuildwheel'
          ) ||
          contains(github.event.pull_request.labels.*.name,
                   'CI: Run cibuildwheel')
        )
      )
    name: Build sdist
    runs-on: ubuntu-latest
    outputs:
      SDIST_NAME: ${{ steps.sdist.outputs.SDIST_NAME }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        name: Install Python
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: python -m pip install build twine

      - name: Build sdist
        id: sdist
        run: |
          python -m build --sdist
          python ci/export_sdist_name.py

      - name: Check README rendering for PyPI
        run: twine check dist/*

      - name: Upload sdist result
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
          if-no-files-found: error

  build_wheels:
    if: >-
      github.repository == 'matplotlib/matplotlib' && (
        github.event_name == 'push' ||
        github.event_name == 'pull_request' && (
          (
            github.event.action == 'labeled' &&
            github.event.label.name == 'CI: Run cibuildwheel'
          ) ||
          contains(github.event.pull_request.labels.*.name,
                   'CI: Run cibuildwheel')
        )
      )
    needs: build_sdist
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.cibw_archs }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            cibw_archs: "x86_64"
          - os: ubuntu-24.04-arm
            cibw_archs: "aarch64"
          - os: windows-latest
            cibw_archs: "auto64"
          - os: macos-13
            cibw_archs: "x86_64"
          - os: macos-14
            cibw_archs: "arm64"

    steps:
      - name: Download sdist
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # v4.3.0
        with:
          name: cibw-sdist
          path: dist/

      - name: Build wheels for CPython 3.14
        uses: pypa/cibuildwheel@5f22145df44122af0f5a201f93cf0207171beca7  # v3.0.0
        with:
          package-dir: dist/${{ needs.build_sdist.outputs.SDIST_NAME }}
        env:
          CIBW_BUILD: "cp314-* cp314t-*"
          CIBW_ENABLE: "cpython-freethreading cpython-prerelease"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython 3.13
        uses: pypa/cibuildwheel@5f22145df44122af0f5a201f93cf0207171beca7  # v3.0.0
        with:
          package-dir: dist/${{ needs.build_sdist.outputs.SDIST_NAME }}
        env:
          CIBW_BUILD: "cp313-* cp313t-*"
          CIBW_ENABLE: cpython-freethreading
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython 3.12
        uses: pypa/cibuildwheel@5f22145df44122af0f5a201f93cf0207171beca7  # v3.0.0
        with:
          package-dir: dist/${{ needs.build_sdist.outputs.SDIST_NAME }}
        env:
          CIBW_BUILD: "cp312-*"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython 3.11
        uses: pypa/cibuildwheel@5f22145df44122af0f5a201f93cf0207171beca7  # v3.0.0
        with:
          package-dir: dist/${{ needs.build_sdist.outputs.SDIST_NAME }}
        env:
          CIBW_BUILD: "cp311-*"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for PyPy
        uses: pypa/cibuildwheel@5f22145df44122af0f5a201f93cf0207171beca7  # v3.0.0
        with:
          package-dir: dist/${{ needs.build_sdist.outputs.SDIST_NAME }}
        env:
          CIBW_BUILD: "pp311-*"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          CIBW_ENABLE: pypy
        if: matrix.cibw_archs != 'aarch64' && matrix.os != 'windows-latest'

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: cibw-wheels-${{ runner.os }}-${{ matrix.cibw_archs }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  publish:
    if: github.repository == 'matplotlib/matplotlib' && github.event_name == 'push' && github.ref_type == 'tag'
    name: Upload release to PyPI
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      attestations: write
      contents: read
    steps:
      - name: Download packages
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # v4.3.0
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Print out packages
        run: ls dist

      - name: Generate artifact attestation for sdist and wheel
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be  # v2.4.0
        with:
          subject-path: dist/matplotlib-*

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # v1.12.4
