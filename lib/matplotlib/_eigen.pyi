from __future__ import annotations

from collections.abc import Sequence

import numpy as np

class Affine2d:
    def __init__(self, matrix: Sequence[Sequence[float]] | None = ...): ...
    def copy(self) -> Affine2d: ...
    def __copy__(self) -> Affine2d: ...
    def __deepcopy__(self) -> Affine2d: ...
    def get_matrix(self) -> np.ndarray: ...
    def is_diagonal(self) -> bool: ...
    def __call__(self, i: int, j: int) -> float: ...
    def __matmul__(self, other: Affine2d) -> Affine2d: ...
    def remove_translate(self) -> None: ...
    def reset(self) -> None: ...
    def rotate(self, theta: float) -> None: ...
    def scale(self, sx: float, sy: float) -> None: ...
    def skew(self, xShear: float, yShear: float) -> None: ...
    def translate(self, tx: float, ty: float) -> None: ...
